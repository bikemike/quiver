dnl Process this file with autoconf to produce a configure script.
dnl Created by Anjuta application wizard.

AC_INIT([quiver], [0.1.14], [http://mike.yi.org/quiver])
AC_CONFIG_SRCDIR([src/Quiver.cpp])

AM_INIT_AUTOMAKE

AM_CONFIG_HEADER([config.h])
AC_PROG_LIBTOOL
dnl AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC


AC_CHECK_FUNCS([gettimeofday])
AC_CHECK_HEADERS([sys/time.h])

AC_CHECK_HEADER([jpeglib.h],, [AC_MSG_ERROR([Could not find jpeglib.h])])
AC_CHECK_HEADER([pthread.h],, [AC_MSG_ERROR([Could not find pthread.h])])

AC_C_CONST
AC_HEADER_STDBOOL
AC_HEADER_TIME


AC_PROG_CPP
AC_PROG_CXX

AC_PATH_PROG([GLIB_GENMARSHAL], [glib-genmarshal])

AC_PATH_PROG([GDK_PIXBUF_CSOURCE], [gdk-pixbuf-csource])

AM_PATH_LIBGCRYPT

dnl Set gettext package name
GETTEXT_PACKAGE=quiver
AC_SUBST([GETTEXT_PACKAGE])
AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE],["$GETTEXT_PACKAGE"], [GETTEXT package name])

dnl Add the languages which your application supports here.
ALL_LINGUAS="fr"
AM_GLIB_GNU_GETTEXT

AC_PROG_INTLTOOL([0.21])

QUIVER_MODULES="gtk+-2.0  gnome-vfs-2.0 libglade-2.0"

PKG_CHECK_MODULES([LIBEXIF], [libexif],[have_libexif=yes],[have_libexif=no])

PKG_CHECK_MODULES([CAIRO], [cairo],
	[
	 AC_DEFINE([HAVE_CAIRO],[1],[cairo is available])
	 have_cairo=yes
	],
	[
	 have_cairo=no
	])

dnl libglade-2.0
AC_ARG_WITH(
	      [build_config], 
	      [AS_HELP_STRING(
	       	[--with-build-config=CFG],
		[where CFG is one of the following build configurations: maemo-x86, maemo-armel])
	      ],
	      [build_config=$withval],
	      [])

third_party_dir=`pwd`/${srcdir}/3rdparty

AM_CONDITIONAL(MAEMO, [test x$build_config = xmaemo-armel || test x$build_config = xmaemo-x86]) 

if test x$build_config = xmaemo-armel; then
	AC_DEFINE(QUIVER_MAEMO,1,[quiver for maemo build configuration])
	QUIVER_MODULES="$QUIVER_MODULES libosso libossomime hildon-libs hildon-fm"
	BOOST_SIGNALS_LIB=${third_party_dir}/boost/lib/armel/mt/release/libboost_signals-gcc-mt-1_33_1.a 

	dnl boost static libs
	dnl cd ${third_party_dir}/boost/lib
	dnl ln -fs armel/signals/build/libboost_signals.a/gcc/release/threading-multi/libboost_signals-gcc-mt-1_33_1.a 
	dnl ln -fs libboost_signals-gcc-mt-1_33_1.a libboost_signals.a

	dnl boost shared libs
	dnl ln -fs armel/signals/build/libboost_signals.so/gcc/release/shared-linkable-true/libboost_signals-gcc-1_33_1.so.1.33.1
	dnl ln -fs libboost_signals-gcc-1_33_1.so.1.33.1 libboost_signals-gcc-1_33_1.so
	dnl ln -fs libboost_signals-gcc-1_33_1.so libboost_signals.so
	dnl cd -
	ac_boost_path=${third_party_dir}/boost
	boost_signals_static=yes
	LIBEXIF_CFLAGS=-I${third_party_dir}/libexif/include
	LIBEXIF_LIBS=${third_party_dir}/libexif/lib/armel/libexif.a

elif test x$build_config = xmaemo-x86; then
	AC_DEFINE(QUIVER_MAEMO,1,[quiver for maemo build configuration])
	QUIVER_MODULES="$QUIVER_MODULES libosso libossomime hildon-libs hildon-fm"
	BOOST_SIGNALS_LIB=${third_party_dir}/boost/lib/x86/mt/release/libboost_signals-gcc-mt-1_33_1.a 
	dnl boost static libs
	dnl cd ${third_party_dir}/boost/lib
	dnl ln -fs x86/signals/build/libboost_signals.a/gcc/release/threading-multi/libboost_signals-gcc-mt-1_33_1.a 
	dnl ln -fs libboost_signals-gcc-mt-1_33_1.a libboost_signals.a

	dnl boost shared libs
	dnl ln -fs x86/signals/build/libboost_signals.so/gcc/release/shared-linkable-true/libboost_signals-gcc-1_33_1.so.1.33.1
	dnl ln -fs libboost_signals-gcc-1_33_1.so.1.33.1 libboost_signals-gcc-1_33_1.so
	dnl ln -fs libboost_signals-gcc-1_33_1.so libboost_signals.so
	dnl cd -
	ac_boost_path=${third_party_dir}/boost
	boost_signals_static=yes
	LIBEXIF_CFLAGS=-I${third_party_dir}/libexif/include
	LIBEXIF_LIBS=${third_party_dir}/libexif/lib/x86/libexif.a
else
        QUIVER_MODULES="$QUIVER_MODULES libgnomeui-2.0"
fi

AC_SUBST([PACKAGE_CFLAGS])

PKG_CHECK_MODULES([PACKAGE], [$QUIVER_MODULES])

AX_BOOST_BASE([1.33.1])
if test x$boost_signals_static = x; then
AX_BOOST_SIGNALS
fi


AC_SUBST([PACKAGE_CFLAGS])
AC_SUBST([PACKAGE_LIBS])

AC_SUBST([LIBEXIF_CFLAGS])
AC_SUBST([LIBEXIF_LIBS])

AC_OUTPUT([
Makefile
po/Makefile.in
libquiver/Makefile
src/Makefile
src/icons/Makefile
data/Makefile
])
